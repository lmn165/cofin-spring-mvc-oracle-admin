<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shop.cofin.oracle.common.mapper.OrderMapper">
	<select id="findAll" resultType="order">
		select
		    order_id orderId,
		    cust_id custId,
		    book_id bookId,
		    order_price orderPrice,
		    order_date orderDate
		from orders
	</select>
	<select id="findById" resultType="order" parameterType="int">
		select
		    order_id orderId,
		    cust_id custId,
		    book_id bookId,
		    order_price orderPrice,
		    order_date orderDate
		from orders
        where order_id = ${orderId}
	</select>
	<insert id="save" parameterType="order">
		insert into
		orders (order_id, cust_id, book_id, order_price, order_date)
		values (${orderId}, ${custId}, ${bookId}, ${orderPrice}, #{orderDate})
	</insert>
	<update id="update" parameterType="order">
		update orders set
		    cust_id = ${custId},
		    book_id = ${bookId},
		    order_price = ${orderPrice},
		    order_date = #{orderDate}
		where order_id like ${orderId}
	</update>
	<delete id="delete" parameterType="int">
		delete from orders
		where order_id like ${orderId}
	</delete>
	
	
	<select id="findByCustId" resultType="order" parameterType="int">
		select
		    order_id orderId,
		    cust_id custId,
		    book_id bookId,
		    order_price orderPrice,
		    order_date orderDate
		from orders
        where cust_id in ${custId}
	</select>
	<select id="findByBookId" resultType="order" parameterType="int">
		select
		    order_id orderId,
		    cust_id custId,
		    book_id bookId,
		    order_price orderPrice,
		    order_date orderDate
		from orders
        where book_id in ${bookId}
	</select>
	<select id="findByOrderPrice" resultType="order" parameterType="int">
		select
		    order_id orderId,
		    cust_id custId,
		    book_id bookId,
		    order_price orderPrice,
		    order_date orderDate
		from orders
        where order_price >= ${orderPrice}
	</select>
	<select id="findByOrderDate" resultType="order" parameterType="string">
		select
		    order_id orderId,
		    cust_id custId,
		    book_id bookId,
		    order_price orderPrice,
		    order_date orderDate
		from orders
        where order_date >= '2007'||'${value}'
	</select>
</mapper>